@{
    ViewBag.Title = "Geocode Address Result";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model GeoServiceDemo.Models.GeocodeAddressModel

<h2>@ViewBag.Title</h2>

<h3>Address</h3>
<ul>
    <li>
        <label>Street</label>
        <span>
            @Model.Address.Street
        </span>
    </li>
    <li>
        <label>City</label>
        <span>
            @Model.Address.City
        </span>
    </li>
    <li>
        <label>State</label>
        <span>
            @Model.Address.StateAbbreviation
        </span>
    </li>
    <li>
        <label>Zip</label>
        <span>
            @Model.Address.Zip
        </span>
    </li>
</ul>

<h3>County</h3>
<p>@Model.County</p>

<h3>Candidate</h3>
<ul>
    <li>
        <label>Address</label>
        <span>@Model.TopCandidate.Address
        </span>
    </li>
    <li>
        <label>Location</label>
        <span>@Model.TopCandidate.Location.Y, @Model.TopCandidate.Location.X
        </span>
    </li>
    <li>
        <label>Score</label>
        <span>@Model.TopCandidate.Score
        </span>
    </li>
    <li>
        <label>Attributes</label>
        <span>@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TopCandidate.Attributes))</span>
    </li>
</ul>

<h3>Map</h3>
<div id="map-canvas"></div>

<h3>Geocode Json Result</h3>
<pre>
    @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.GeocodeJsonResult))
</pre>

<h3>FCC Json Result</h3>
<pre>
    @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.FccJsonResult))
</pre>

<p>
    <a href="@Url.Action("Index")">Return</a>
</p>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
<script>
    var geocoder;
    var map;
    var infowindow = new google.maps.InfoWindow();
    var marker;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(@Model.TopCandidate.Location.Y, @Model.TopCandidate.Location.X); // 40.730885,-73.997383
        var mapOptions = {
            zoom: 8,
            center: latlng,
            mapTypeId: 'roadmap'
        }
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        codeLatLng();
    }

    function codeLatLng() {
        var lat = parseFloat(@Model.TopCandidate.Location.Y);
        var lng = parseFloat(@Model.TopCandidate.Location.X);
        var latlng = new google.maps.LatLng(lat, lng);
        geocoder.geocode({ 'latLng': latlng }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (results[1]) {
                    map.setZoom(11);
                    marker = new google.maps.Marker({
                        position: latlng,
                        map: map
                    });
                    infowindow.setContent(results[1].formatted_address);
                    infowindow.open(map, marker);
                } else {
                    alert('No results found');
                }
            } else {
                alert('Geocoder failed due to: ' + status);
            }
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>
